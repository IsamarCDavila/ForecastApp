{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/services/error-handle.service.ts","webpack:///./src/app/shared/services/location.service.ts","webpack:///./src/app/weather/weather.component.css","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherComponent } from './weather/weather.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'weather', pathMatch: 'full' },\n  { path: 'weather', component: WeatherComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WeatherClient';\n}\n","export class Constants {\r\n  static locationAPIUrl = 'http://dataservice.accuweather.com/locations/v1';\r\n  static apiKey = 'NmKsVaQH0chGQGIZodHin88XOpwhuoda';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent\n  ],\n  imports: [\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandleService {\r\n\r\n  constructor() {}\r\n\r\n  handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    }\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Constants } from '../../../app/app.constants';\nimport { Country } from '../../shared/models/country';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ErrorHandleService } from '../../shared/services/error-handle.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  constructor(\n    private http: HttpClient,\n    private errorHandleService: ErrorHandleService) { }\n\n  getCountries(): Observable<Country[]> {\n    const uri = decodeURIComponent(\n      `${Constants.locationAPIUrl}/countries?apikey=${Constants.apiKey}`\n    );\n    return this.http.get<Country[]>(uri)\n      .pipe(\n        tap(_ => console.log('fetched countries')),\n        catchError(this.errorHandleService.handleError('getCountries', []))\n      );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlYXRoZXIvd2VhdGhlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container content\\\" style=\\\"padding-left: 0px; padding-top: 10px\\\">\\r\\n  <form [formGroup]=\\\"weatherForm\\\">\\r\\n    <div formGroupName=\\\"searchGroup\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 form-group\\\">\\r\\n          <!--<input type=\\\"text\\\" id=\\\"country\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\"\\r\\n                 placeholder=\\\"Country\\\"\\r\\n                 [ngbTypeahead]=\\\"searchCountry\\\" [resultFormatter]=\\\"countryFormatter\\\"\\r\\n                 [inputFormatter]=\\\"countryFormatter\\\"\\r\\n                 (focus)=\\\"focus$.next($event.target.value)\\\"\\r\\n                 (click)=\\\"click$.next($event.target.value)\\\"\\r\\n                 #instanceCountry=\\\"ngbTypeahead\\\"\\r\\n                 autocomplete=\\\"off\\\" editable=\\\"false\\\" [focusFirst]=\\\"false\\\" />-->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 form-group\\\">\\r\\n          <input type=\\\"text\\\" id=\\\"city\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"Location\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!weatherForm.valid\\\" value=\\\"Go\\\" (click)=\\\"search()\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\nimport { LocationService } from '../shared/services/location.service';\nimport { Country } from '../shared/models/country';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\n  private weatherForm: FormGroup;\n  private countries: Array<Country> = [];\n  private errorMessage: string;\n\n  @ViewChild('instanceCountry')\n  instanceCountry: NgbTypeahead;\n  focus$ = new Subject<string>();\n  click$ = new Subject<string>();\n\n  constructor(\n    private fb: FormBuilder,\n    private locationService: LocationService) {\n  }\n\n  async ngOnInit() {\n    this.weatherForm = this.buildForm();\n    await this.getCountries();\n  }\n\n  buildForm(): FormGroup {\n    return this.fb.group({\n      searchGroup: this.fb.group({\n        country: [\n          null\n        ],\n        city: [\n          null,\n          [Validators.required]\n        ],\n      })\n    });\n  }\n\n  countryFormatter = (country: Country) => country.EnglishName;\n\n  searchCountry = (text$: Observable<string>) => {\n    const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\n    const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instanceCountry.isPopupOpen()));\n    const inputFocus$ = this.focus$;\n\n    return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\n      map(term => (term === ''\n        ? this.countries\n        : this.countries.filter(v => v.EnglishName.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\n    );\n  }\n\n  async getCountries() {\n    const promise = new Promise((resolve, reject) => {\n      this.locationService.getCountries()\n        .toPromise()\n        .then(\n          res => { // Success\n            this.countries = res;\n            resolve();\n          },\n          err => {\n            console.error(err);\n            this.errorMessage = err;\n            reject(err);\n          }\n        );\n    });\n    await promise;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}